{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Coding\\\\express-react-seperate\\\\client\\\\src\\\\FilePreview.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './FilePreview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FilePreview() {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  function showPreview(file) {\n    let fileType = file.split('.').pop();\n\n    switch (fileType) {\n      case \"mp4\":\n        setSelectedFile( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"previewOverlay\",\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"mediaPreview\",\n            width: \"50%\",\n            controls: true,\n            muted: \"muted\",\n            loop: true,\n            autoPlay: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: \"/video/\" + file,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this));\n        break;\n\n      case \"png\":\n      case \"jpg\":\n        setSelectedFile( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"previewOverlay\",\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"mediaPreview\",\n            width: \"50%\",\n            controls: true,\n            muted: \"muted\",\n            loop: true,\n            autoPlay: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: \"/video/\" + file,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this));\n        break;\n\n      default:\n        console.log(\"this file type is not supported...\");\n    }\n  }\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(\"/files\").then(res => res.json()).then(data => {\n      let divs = [];\n      data.array.forEach(element => {\n        divs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview__container\",\n          onDoubleClick: () => showPreview(element),\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: element\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, element, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this));\n      });\n      setData(divs);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-preview__body\",\n    children: [!data ? \"Loading...\" : data, selectedFile]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FilePreview, \"3cKJ3b9lzyNUwfRCLD5Zzz8GB/Y=\");\n\n_c = FilePreview;\nexport default FilePreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilePreview\");","map":{"version":3,"sources":["D:/Documents/Coding/express-react-seperate/client/src/FilePreview.js"],"names":["useState","useEffect","FilePreview","selectedFile","setSelectedFile","showPreview","file","fileType","split","pop","console","log","data","setData","fetch","then","res","json","divs","array","forEach","element","push"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,IAAD,CAAhD;;AAEA,WAASK,WAAT,CAAqBC,IAArB,EAA2B;AACzB,QAAIC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgBC,GAAhB,EAAf;;AACA,YAAQF,QAAR;AACE,WAAK,KAAL;AACEH,QAAAA,eAAe,eACb;AAAK,UAAA,EAAE,EAAC,gBAAR;AAAA,iCACE;AAAO,YAAA,EAAE,EAAC,cAAV;AAAyB,YAAA,KAAK,EAAC,KAA/B;AAAqC,YAAA,QAAQ,MAA7C;AAA8C,YAAA,KAAK,EAAC,OAApD;AAA4D,YAAA,IAAI,MAAhE;AAAiE,YAAA,QAAQ,MAAzE;AAAA,mCACE;AAAQ,cAAA,GAAG,EAAE,YAAYE,IAAzB;AAA+B,cAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADa,CAAf;AAOA;;AACF,WAAK,KAAL;AACA,WAAK,KAAL;AACEF,QAAAA,eAAe,eACb;AAAK,UAAA,EAAE,EAAC,gBAAR;AAAA,iCACE;AAAO,YAAA,EAAE,EAAC,cAAV;AAAyB,YAAA,KAAK,EAAC,KAA/B;AAAqC,YAAA,QAAQ,MAA7C;AAA8C,YAAA,KAAK,EAAC,OAApD;AAA4D,YAAA,IAAI,MAAhE;AAAiE,YAAA,QAAQ,MAAzE;AAAA,mCACE;AAAQ,cAAA,GAAG,EAAE,YAAYE,IAAzB;AAA+B,cAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADa,CAAf;AAOA;;AACF;AACEI,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AArBJ;AAuBD;;AAED,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,QAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESH,IAAD,IAAU;AACd,UAAIM,IAAI,GAAG,EAAX;AACAN,MAAAA,IAAI,CAACO,KAAL,CAAWC,OAAX,CAAmBC,OAAO,IAAI;AAC5BH,QAAAA,IAAI,CAACI,IAAL,eACA;AAEE,UAAA,SAAS,EAAC,yBAFZ;AAGE,UAAA,aAAa,EAAE,MAAMjB,WAAW,CAACgB,OAAD,CAHlC;AAAA,iCAKE;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AALF,WACOA,OADP;AAAA;AAAA;AAAA;AAAA,gBADA;AASD,OAVD;AAWAR,MAAAA,OAAO,CAACK,IAAD,CAAP;AACD,KAhBH;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,eACG,CAACN,IAAD,GAAQ,YAAR,GAAuBA,IAD1B,EAEGT,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMD;;GA1DQD,W;;KAAAA,W;AA4DT,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './FilePreview.css';\r\n\r\nfunction FilePreview() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  function showPreview(file) {\r\n    let fileType = file.split('.').pop();\r\n    switch (fileType) {\r\n      case \"mp4\":\r\n        setSelectedFile(\r\n          <div id=\"previewOverlay\">\r\n            <video id=\"mediaPreview\" width=\"50%\" controls muted=\"muted\" loop autoPlay>\r\n              <source src={\"/video/\" + file} type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"png\":\r\n      case \"jpg\":\r\n        setSelectedFile(\r\n          <div id=\"previewOverlay\">\r\n            <video id=\"mediaPreview\" width=\"50%\" controls muted=\"muted\" loop autoPlay>\r\n              <source src={\"/video/\" + file} type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        console.log(\"this file type is not supported...\");\r\n    }\r\n  }\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/files\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let divs = [];\r\n        data.array.forEach(element => {\r\n          divs.push(\r\n          <div \r\n            key={element}\r\n            className=\"file-preview__container\"\r\n            onDoubleClick={() => showPreview(element)}\r\n          >\r\n            <h1>{element}</h1>\r\n          </div>\r\n          );\r\n        });\r\n        setData(divs);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n      <div className=\"file-preview__body\">\r\n        {!data ? \"Loading...\" : data}\r\n        {selectedFile}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default FilePreview;"]},"metadata":{},"sourceType":"module"}